#/usr/bin/env perl
use strict;
use warnings;

my $B = 24;
my $z = 0.0;
my $log_or_exp = $ARGV[0];
my $x = $ARGV[1];
die "USAGE: perl cordic_log [log|exp10] x\n" unless $log_or_exp =~ /^(log|exp)/;
die "USAGE: perl cordic_log [log|exp10] x\n" unless $x;

printf "\nx = %1.8f\n", $x, $x;

my @log_neg_values = (
    -0.301029995663981200,
    -0.124938736608299950,
    -0.057991946977686754,
    -0.028028723600243537,
    -0.013788284485633297,
    -0.006839424530305466,
    -0.003406248691911502,
    -0.001699784877894391,
    -0.000849060841118025,
    -0.000424322927651794,
    -0.000212109641287484,
    -0.000106041871337063,
    -0.000053017699132346,
    -0.000026508040530905,
    -0.000013253818018981,
    -0.000006626858449416,
    -0.000003313416584882,
    -0.000001656705132509,
    -0.000000828351776274,
    -0.000000414175690642,
    -0.000000207087795948,
    -0.000000103543885630,
    -0.000000051771939729,
    -0.000000025885969093
);

my @log_pos_values = (
    0.176091259055681000,
    0.096910013008056400,
    0.051152522447381300,
    0.026328938722349100,
    0.013363961557981500,
    0.006733382658968400,
    0.003379740651380600,
    0.001693158019444980,
    0.000847404135985517,
    0.000423908751961152,
    0.000212006097401853,
    0.000106015985367970,
    0.000053011227640217,
    0.000026506422657882,
    0.000013253413550726,
    0.000006626757332352,
    0.000003313391305616,
    0.000001656698812692,
    0.000000828350196320,
    0.000000414175295654,
    0.000000207087697200,
    0.000000103543860944,
    0.000000051771933558,
    0.000000025885967550
);

if( $log_or_exp =~ /^log/ ) {

    print "Calculating z = log10(x)\n\n";
    
    $z = 0.0;
    for( my $i = 1; $i <= $B; $i++ ) {
        if( $x > 1.0 ) {
           $x = $x - $x*2**(-$i); 
           $z = $z - $log_neg_values[$i-1]; 
        } else {
           $x = $x + $x*2**(-$i); 
           $z = $z - $log_pos_values[$i-1]; 
        }
        printf "\t%1.16f\n", $z;
    }

} elsif( $log_or_exp =~ /^exp/) {

    print "Calculating z = 10^x\n\n";

    $z = 1.0;
    for( my $i = 1; $i <= $B; $i++ ) {
       if( $x > 0.0 ) {
            $x = $x - $log_pos_values[$i-1]; 
            $z = $z + $z*2**(-$i);
       } else {
            $x = $x - $log_neg_values[$i-1]; 
            $z = $z - $z*2**(-$i);
       } 
       printf "%1.16f\n", $z;
    } 

}

printf "\nFinal result: z = %1.16f\n\n", $z;
